import {
  __commonJS
} from "./chunk-JEXKZRFY.js";

// node_modules/festivos-colombia/holidays.js
var require_holidays = __commonJS({
  "node_modules/festivos-colombia/holidays.js"(exports) {
    var HOLIDAYS = [
      { date: "01/01", nextMonday: false, name: "Año Nuevo" },
      { date: "01/06", nextMonday: true, name: "Día de los Reyes Magos" },
      { date: "03/19", nextMonday: true, name: "Día de San José" },
      { daysToSum: -3, nextMonday: false, name: "Jueves Santo" },
      { daysToSum: -2, nextMonday: false, name: "Viernes Santo" },
      { date: "05/01", nextMonday: false, name: "Día del Trabajo" },
      { daysToSum: 40, nextMonday: true, name: "Ascensión del Señor" },
      { daysToSum: 60, nextMonday: true, name: "Corphus Christi" },
      { daysToSum: 71, nextMonday: true, name: "Sagrado Corazón de Jesús" },
      { date: "06/29", nextMonday: true, name: "San Pedro y San Pablo" },
      { date: "07/20", nextMonday: false, name: "Día de la Independencia" },
      { date: "08/07", nextMonday: false, name: "Batalla de Boyacá" },
      { date: "08/15", nextMonday: true, name: "La Asunción de la Virgen" },
      { date: "10/12", nextMonday: true, name: "Día de la Raza" },
      { date: "11/01", nextMonday: true, name: "Todos los Santos" },
      { date: "11/11", nextMonday: true, name: "Independencia de Cartagena" },
      { date: "12/08", nextMonday: false, name: "Día de la Inmaculada Concepción" },
      { date: "12/25", nextMonday: false, name: "Día de Navidad" }
    ];
    exports.holidays = HOLIDAYS;
  }
});

// node_modules/festivos-colombia/app.js
var require_app = __commonJS({
  "node_modules/festivos-colombia/app.js"(exports, module) {
    var HOLIDAYS = require_holidays().holidays;
    function applyTwoDigits(number) {
      return number < 10 ? "0" + number : number;
    }
    function formatDate(date) {
      return applyTwoDigits(date.getDate()) + "/" + applyTwoDigits(date.getMonth() + 1) + "/" + date.getFullYear();
    }
    function getEasterSunday(year) {
      let a, b, c, d, e, day;
      a = year % 19;
      b = year % 4;
      c = year % 7;
      d = (19 * a + 24) % 30;
      e = (2 * b + 4 * c + 6 * d + 5) % 7;
      day = 22 + d + e;
      if (day >= 1 && day <= 31) {
        return new Date(`03/${applyTwoDigits(day)}/${year}`);
      } else {
        return new Date(`04/${applyTwoDigits(day - 31)}/${year}`);
      }
    }
    function getNextMonday(date) {
      while (date.getDay() !== 1) {
        date.setDate(date.getDate() + 1);
      }
      return date;
    }
    function sumDay(stringDate, dayToSum) {
      let date = new Date(stringDate);
      date.setDate(date.getDate() + dayToSum);
      return date;
    }
    function getHolidaysByYear(year) {
      let holidaysArray = [];
      let easterSunday = getEasterSunday(year);
      HOLIDAYS.forEach((element) => {
        let date;
        if (!element.daysToSum) {
          date = new Date(element.date + "/" + year);
        } else {
          date = sumDay(easterSunday.toDateString(), element.daysToSum);
        }
        if (element.nextMonday) {
          date = getNextMonday(date);
        }
        holidaysArray.push({
          date: formatDate(date),
          name: element.name,
          static: element.nextMonday
        });
      });
      return holidaysArray;
    }
    function getHolidaysByYearInterval(initialYear, finalYear) {
      let holidaysArray = [];
      for (let i = initialYear; i <= finalYear; i++) {
        let year = {
          year: i,
          holidays: []
        };
        let easterSunday = getEasterSunday(i);
        HOLIDAYS.forEach((element) => {
          let date;
          if (!element.daysToSum) {
            date = new Date(element.date + "/" + i);
          } else {
            date = sumDay(easterSunday.toDateString(), element.daysToSum);
          }
          if (element.nextMonday) {
            date = getNextMonday(date);
          }
          year.holidays.push({
            date: formatDate(date),
            name: element.name,
            static: element.nextMonday
          });
        });
        holidaysArray.push(year);
      }
      return holidaysArray;
    }
    module.exports.getHolidaysByYear = getHolidaysByYear;
    module.exports.getHolidaysByYearInterval = getHolidaysByYearInterval;
  }
});
export default require_app();
//# sourceMappingURL=festivos-colombia.js.map
