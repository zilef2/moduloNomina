{
  "version": 3,
  "sources": ["../../festivos-colombia/holidays.js", "../../festivos-colombia/app.js"],
  "sourcesContent": ["const HOLIDAYS = [\n\t{ date: \"01/01\", nextMonday: false, name: \"Año Nuevo\" },\n\t{ date: \"01/06\", nextMonday: true, name: \"Día de los Reyes Magos\" },\n\t{ date: \"03/19\", nextMonday: true, name: \"Día de San José\" },\n\t{ daysToSum: -3, nextMonday: false, name: \"Jueves Santo\" },\n\t{ daysToSum: -2, nextMonday: false, name: \"Viernes Santo\" },\n\t{ date: \"05/01\", nextMonday: false, name: \"Día del Trabajo\" },\n\t{ daysToSum: 40, nextMonday: true, name: \"Ascensión del Señor\" },\n\t{ daysToSum: 60, nextMonday: true, name: \"Corphus Christi\" },\n\t{ daysToSum: 71, nextMonday: true, name: \"Sagrado Corazón de Jesús\" },\n\t{ date: \"06/29\", nextMonday: true, name: \"San Pedro y San Pablo\" },\n\t{ date: \"07/20\", nextMonday: false, name: \"Día de la Independencia\" },\n\t{ date: \"08/07\", nextMonday: false, name: \"Batalla de Boyacá\" },\n\t{ date: \"08/15\", nextMonday: true, name: \"La Asunción de la Virgen\" },\n\t{ date: \"10/12\", nextMonday: true, name: \"Día de la Raza\" },\n\t{ date: \"11/01\", nextMonday: true, name: \"Todos los Santos\" },\n\t{ date: \"11/11\", nextMonday: true, name: \"Independencia de Cartagena\" },\n\t{ date: \"12/08\", nextMonday: false, name: \"Día de la Inmaculada Concepción\" },\n\t{ date: \"12/25\", nextMonday: false, name: \"Día de Navidad\" }\n];\n\n/**\n * Modulo que contiene dos Objetos con las fechas de los días \n * festivos del año\n * @module holidays\n */\nexports.holidays = HOLIDAYS;\n/* \npascua entre marzo 22 y abril 25\nascensión 40 días después de pascua\ncorpus christi 60 días después de pascua\nsagrado corazon 71 días después de pascua\n*/", "/**\n * Modulo que contiene la lógica para obtener los días festivos\n * @module calendar\n * @author Juan Bermudez <juanbermucele@hotmail.com>\n * @since 1.0\n */\nconst HOLIDAYS = require(\"./holidays.js\").holidays;\n\n/**\n * @function applyTwoDigits\n * Aplica el formato de dos dígitos a un número menor que diez\n * @author Juan Bermudez <juanbermucele@hotmail.com>\n * @since 1.0\n * @param {number} number \n * @returns {string} texto formateado\n */\nfunction applyTwoDigits(number) {\n\treturn number < 10 ? \"0\" + number : number;\n}\n\n/**\n * @function formatDate\n * Aplica el formato DD/MM/YYYY a una fecha\n * @author Juan Bermudez <juanbermucele@hotmail.com>\n * @since 1.0\n * @param {Date} date objeto con la fecha a formatear\n * @returns {string} texto de la fecha formateada\n */\nfunction formatDate(date) {\n\treturn applyTwoDigits(date.getDate()) + \"/\" + applyTwoDigits(date.getMonth() + 1) + \"/\" + date.getFullYear();\n}\n\n/**\n * @function getEasterSunday\n * Algoritmo propuesto por Ian Stewart en 2001 para calcular la fecha\n * exacta del domingo de resurrección/pascua\n * @author Juan Bermudez <juanbermucele@hotmail.com>\n * @since 1.0\n * @param {number} year número del año\n * @returns {Date} Retorna el domingo de resurrección/pascua\n */\nfunction getEasterSunday(year) {\n\tlet a, b, c, d, e, day;\n\ta = year % 19;\n\tb = year % 4;\n\tc = year % 7;\n\td = (19 * a + 24) % 30;\n\te = (2 * b + 4 * c + 6 * d + 5) % 7;\n\tday = 22 + d + e;\n\n\tif (day >= 1 && day <= 31) {\n\t\treturn new Date(`03/${applyTwoDigits(day)}/${year}`);\n\t} else {\n\t\treturn new Date(`04/${applyTwoDigits(day - 31)}/${year}`);\n\t}\n}\n\n/**\n * @function getNextMonday\n * Calcula el próximo lunes de una fecha dada\n * @author Juan Bermudez <juanbermucele@hotmail.com>\n * @since 1.0\n * @param {Date} date fecha de partida\n * @returns {Date} retorna el próximo lunes a la fecha\n */\nfunction getNextMonday(date) {\n\t//console.log(\"Fecha recibida: \" + date.toDateString());\n\twhile (date.getDay() !== 1) {\n\t\tdate.setDate(date.getDate() + 1);\n\t\t//console.log(\"New date: \" + date);\n\t}\n\treturn date;\n}\n\n/**\n * @function sumDay\n * Suma una cantidad de días a una fecha dada\n * @author Juan Bermudez <juanbermucele@hotmail.com>\n * @since 1.0\n * @param {string} stringDate objeto de la fecha\n * @param {number} dayToSum cantidad de días a sumar\n * @returns {Date} retorna la nueva fecha con los días sumados\n */\nfunction sumDay(stringDate, dayToSum) {\n\tlet date = new Date(stringDate);\n\tdate.setDate(date.getDate() + dayToSum);\n\treturn date;\n}\n\n/**\n * @function getHolidaysByYear\n * Calcula y retorna el listado de festivos de un año dado\n * @author Juan Bermudez <juanbermucele@hotmail.com>\n * @since 1.0\n * @param {number} year número del año\n * @returns {Array} Array con todos los festivos del año\n */\nfunction getHolidaysByYear(year) {\n\tlet holidaysArray = [];\n\t//Obtiene el domingo de pascua para calcular los días litúrgicos\n\tlet easterSunday = getEasterSunday(year);\n\n\tHOLIDAYS.forEach(element => {\n\t\tlet date;\n\t\tif (!element.daysToSum) {\n\t\t\tdate = new Date(element.date + \"/\" + year);\n\t\t} else {\n\t\t\tdate = sumDay(easterSunday.toDateString(), element.daysToSum);\n\t\t}\n\n\t\tif (element.nextMonday) {\n\t\t\tdate = getNextMonday(date);\n\t\t}\n\t\tholidaysArray.push({\n\t\t\tdate: formatDate(date),\n\t\t\tname: element.name,\n\t\t\tstatic: element.nextMonday\n\t\t});\n\t});\n\treturn holidaysArray;\n}\n\n/**\n * @function getHolidaysByYear\n * Calcula todos los días festivos de un rango de años\n * @author Juan Bermudez <juanbermucele@hotmail.com>\n * @since 1.0\n * @param {*} initialYear año de inicio del rango\n * @param {*} finalYear año final del rango\n * @returns {Array} Array con todos los festivos del año\n */\nfunction getHolidaysByYearInterval(initialYear, finalYear) {\n\tlet holidaysArray = [];\n\t//Obtiene el domingo de pascua para calcular los días litúrgicos\n\tfor (let i = initialYear; i <= finalYear; i++) {\n\t\tlet year = {\n\t\t\tyear : i,\n\t\t\tholidays: []\n\t\t};\n\t\tlet easterSunday = getEasterSunday(i);\n\n\t\tHOLIDAYS.forEach(element => {\n\t\t\tlet date;\n\t\t\tif (!element.daysToSum) {\n\t\t\t\tdate = new Date(element.date + \"/\" + i);\n\t\t\t} else {\n\t\t\t\tdate = sumDay(easterSunday.toDateString(), element.daysToSum);\n\t\t\t}\n\n\t\t\tif (element.nextMonday) {\n\t\t\t\tdate = getNextMonday(date);\n\t\t\t}\n\t\t\tyear.holidays.push({\n\t\t\t\tdate: formatDate(date),\n\t\t\t\tname: element.name,\n\t\t\t\tstatic: element.nextMonday\n\t\t\t});\n\t\t});\n\t\tholidaysArray.push(year);\n\t}\n\treturn holidaysArray;\n}\n\nmodule.exports.getHolidaysByYear = getHolidaysByYear;\nmodule.exports.getHolidaysByYearInterval = getHolidaysByYearInterval;"],
  "mappings": "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",
  "names": []
}
